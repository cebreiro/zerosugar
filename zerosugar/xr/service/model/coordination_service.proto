syntax = "proto3";

package zerosugar.xr.service;

service CoordinationService
{
    rpc RegisterServer (RegisterServerParam) returns (RegisterServerResult);
    rpc OpenChannel (stream CoordinationChannelInput) returns (stream CoordinationChannelOutput);

    rpc RequestSnowflakeKey (RequestSnowflakeKeyParam) returns (RequestSnowflakeKeyResult);
    rpc ReturnSnowflakeKey (ReturnSnowflakeKeyParam) returns (ReturnSnowflakeKeyResult);

    rpc AddPlayer (AddPlayerParam) returns (AddPlayerResult);
}

enum CoordinationServiceErrorCode
{
    coordination_error_none = 0;
    coordination_error_internal_error = 1;
    coordination_error_fail_authentication = 2;

    register_error_duplicated_address = 10001;

    request_snowflake_key_error_out_of_pool = 30001;
    return_snowflake_key_error_invalid_key = 40001;
}

message RegisterServerParam
{
    string name = 1;
    string ip = 2;
    int32 port = 3;
}

message RegisterServerResult
{
    CoordinationServiceErrorCode error_code = 1;
    int64 server_id = 2;
}

message CoordinationChannelInput
{
    int32 opcode = 1;
    bytes bytes = 2;
}

message CoordinationChannelOutput
{
    int32 opcode = 1;
    bytes bytes = 2;
}

message RequestSnowflakeKeyParam
{
    string requester = 1;
}

message RequestSnowflakeKeyResult
{
    CoordinationServiceErrorCode error_code = 1;
    int32 snowflake_key = 2;
}

message ReturnSnowflakeKeyParam
{
    string requester = 1;
    int32 snowflake_key = 2;
}

message ReturnSnowflakeKeyResult
{
    CoordinationServiceErrorCode error_code = 1;
}

message AddPlayerParam
{
    string authentication_token = 1;
    int64 account_id = 2;
    int64 character_id = 3;
    int32 zone_id = 4;
}

message AddPlayerResult
{
    CoordinationServiceErrorCode error_code = 1;

    string ip = 2;
    int32 port = 3;
}
